!function(){"use strict";var n,e,t,r,o,a,A,i,s,c,l,u,d,p,g={426:function(n,e,t){var r=t(537),o=t.n(r),a=t(645),A=t.n(a)()(o());A.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Jost&display=swap);"]),A.push([n.id,':root.dark {\n    --border: 1px solid whitesmoke;\n    --bg: rgb(0, 0, 0);\n    --bg2: rgb(29, 29, 29);\n    --bg3: rgb(39, 39, 39);\n    --text: white;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\n\n:root {\n    --border: 1px solid black;\n    --bg: rgb(255, 255, 255);\n    --bg2: rgb(250, 250, 250);\n    --bg3: rgb(245, 245, 245);\n    --text: black;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\ninput, textarea, select, button, meter, progress{\n    margin: 0;\n    padding: 0;\n    border: none;\n    outline: none; /* Remove default focus outline */\n    box-sizing: border-box; /* Include padding and border in element\'s total width and height */\n    background-color: transparent; /* Reset background color */\n    font-family: inherit; /* Inherit font from parent */\n}\n  \n/* Reset button and submit input styles */\nbutton, input[type="submit"], input[type="button"] {\n    cursor: pointer;\n    background-color: transparent;\n}\n\n/* Reset checkbox and radio input styles */\ninput[type="checkbox"], input[type="radio"] {\n    vertical-align: middle; /* Align the input with label text */\n}\n\n/* Reset select element styles */\nselect {\n    appearance: none; /* Remove default dropdown arrow on Chrome */\n    background-image: none; /* Remove default background image */\n}\n\n/* Reset textarea styles */\ntextarea {\n    resize: vertical; /* Allow vertical resizing */\n}\n\n/* Make labels & forms & buttons & inputs block-level elements */\nlabel, form, button, input{\n    display: block;\n}\n\nbody {\n    font-family: var(--font);\n    background-color: var(--bg);\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n\nheader {\n    font-size: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    padding: 10px;\n    font-family: var(--font);\n    border-bottom: var(--border);\n    background-color: var(--bg2);\n}\n\n.header {\n    font-weight: 900;\n}\n\nheader img {\n    width: 50px;\n}\n\n.tt {\n    cursor: pointer;\n    font-size: 1.5rem;\n    position: absolute;\n    right: 20px;\n}\n\nmain {\n    flex: 1;\n    padding: 20px;\n    display: flex;\n    justify-content: center;\n    font-size: 1.5rem;\n}\n\nmain > form {\n\n}\n\nmain > form > input{\n    border: var(--border);\n    border-radius: 7px;\n    padding: 3px;\n}\n\nfooter {\n    border-top: var(--border);\n    text-align: center;\n    padding: 10px;\n    font-size: 1.2rem;\n    background-color: var(--bg2);\n}',"",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAEA;IACI,8BAA8B;IAC9B,kBAAkB;IAClB,sBAAsB;IACtB,sBAAsB;IACtB,aAAa;IACb,oBAAoB;IACpB,2BAA2B;IAC3B,yBAAyB;IACzB,yBAAyB;IACzB,yBAAyB;IACzB,iEAAiE;IACjE,+BAA+B;IAC/B,uBAAuB;IACvB,0BAA0B;AAC9B;;AAEA;IACI,yBAAyB;IACzB,wBAAwB;IACxB,yBAAyB;IACzB,yBAAyB;IACzB,aAAa;IACb,oBAAoB;IACpB,2BAA2B;IAC3B,yBAAyB;IACzB,yBAAyB;IACzB,yBAAyB;IACzB,iEAAiE;IACjE,+BAA+B;IAC/B,uBAAuB;IACvB,0BAA0B;AAC9B;;AAEA;;;IAGI,sBAAsB;IACtB,UAAU;IACV,SAAS;AACb;;AAEA;IACI,SAAS;IACT,UAAU;IACV,YAAY;IACZ,aAAa,EAAE,iCAAiC;IAChD,sBAAsB,EAAE,mEAAmE;IAC3F,6BAA6B,EAAE,2BAA2B;IAC1D,oBAAoB,EAAE,6BAA6B;AACvD;;AAEA,yCAAyC;AACzC;IACI,eAAe;IACf,6BAA6B;AACjC;;AAEA,0CAA0C;AAC1C;IACI,sBAAsB,EAAE,oCAAoC;AAChE;;AAEA,gCAAgC;AAChC;IACI,gBAAgB,EAAE,4CAA4C;IAC9D,sBAAsB,EAAE,oCAAoC;AAChE;;AAEA,0BAA0B;AAC1B;IACI,gBAAgB,EAAE,4BAA4B;AAClD;;AAEA,gEAAgE;AAChE;IACI,cAAc;AAClB;;AAEA;IACI,wBAAwB;IACxB,2BAA2B;IAC3B,kBAAkB;IAClB,aAAa;IACb,sBAAsB;IACtB,iBAAiB;AACrB;;AAEA;IACI,eAAe;IACf,aAAa;IACb,mBAAmB;IACnB,uBAAuB;IACvB,QAAQ;IACR,aAAa;IACb,wBAAwB;IACxB,4BAA4B;IAC5B,4BAA4B;AAChC;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,WAAW;AACf;;AAEA;IACI,eAAe;IACf,iBAAiB;IACjB,kBAAkB;IAClB,WAAW;AACf;;AAEA;IACI,OAAO;IACP,aAAa;IACb,aAAa;IACb,uBAAuB;IACvB,iBAAiB;AACrB;;AAEA;;AAEA;;AAEA;IACI,qBAAqB;IACrB,kBAAkB;IAClB,YAAY;AAChB;;AAEA;IACI,yBAAyB;IACzB,kBAAkB;IAClB,aAAa;IACb,iBAAiB;IACjB,4BAA4B;AAChC",sourcesContent:['@import url(\'https://fonts.googleapis.com/css2?family=Jost&display=swap\');\n\n:root.dark {\n    --border: 1px solid whitesmoke;\n    --bg: rgb(0, 0, 0);\n    --bg2: rgb(29, 29, 29);\n    --bg3: rgb(39, 39, 39);\n    --text: white;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\n\n:root {\n    --border: 1px solid black;\n    --bg: rgb(255, 255, 255);\n    --bg2: rgb(250, 250, 250);\n    --bg3: rgb(245, 245, 245);\n    --text: black;\n    --lightgray: #f0eef1;\n    --green: rgb(105, 247, 105);\n    --red: rgb(255, 118, 118);\n    --navy: rgb(21, 101, 192);\n    --blue: rgb(33, 150, 243);\n    --navyToBlue: linear-gradient(to right, var(--navy), var(--blue));\n    --shadow: 0px 2px 2px lightgray;\n    --gray: rgb(94, 94, 94);\n    --font: \'Jost\', sans-serif;\n}\n\n*,\n*::before,\n*::after {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n}\n\ninput, textarea, select, button, meter, progress{\n    margin: 0;\n    padding: 0;\n    border: none;\n    outline: none; /* Remove default focus outline */\n    box-sizing: border-box; /* Include padding and border in element\'s total width and height */\n    background-color: transparent; /* Reset background color */\n    font-family: inherit; /* Inherit font from parent */\n}\n  \n/* Reset button and submit input styles */\nbutton, input[type="submit"], input[type="button"] {\n    cursor: pointer;\n    background-color: transparent;\n}\n\n/* Reset checkbox and radio input styles */\ninput[type="checkbox"], input[type="radio"] {\n    vertical-align: middle; /* Align the input with label text */\n}\n\n/* Reset select element styles */\nselect {\n    appearance: none; /* Remove default dropdown arrow on Chrome */\n    background-image: none; /* Remove default background image */\n}\n\n/* Reset textarea styles */\ntextarea {\n    resize: vertical; /* Allow vertical resizing */\n}\n\n/* Make labels & forms & buttons & inputs block-level elements */\nlabel, form, button, input{\n    display: block;\n}\n\nbody {\n    font-family: var(--font);\n    background-color: var(--bg);\n    color: var(--text);\n    display: flex;\n    flex-direction: column;\n    min-height: 100vh;\n}\n\nheader {\n    font-size: 2rem;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 5px;\n    padding: 10px;\n    font-family: var(--font);\n    border-bottom: var(--border);\n    background-color: var(--bg2);\n}\n\n.header {\n    font-weight: 900;\n}\n\nheader img {\n    width: 50px;\n}\n\n.tt {\n    cursor: pointer;\n    font-size: 1.5rem;\n    position: absolute;\n    right: 20px;\n}\n\nmain {\n    flex: 1;\n    padding: 20px;\n    display: flex;\n    justify-content: center;\n    font-size: 1.5rem;\n}\n\nmain > form {\n\n}\n\nmain > form > input{\n    border: var(--border);\n    border-radius: 7px;\n    padding: 3px;\n}\n\nfooter {\n    border-top: var(--border);\n    text-align: center;\n    padding: 10px;\n    font-size: 1.2rem;\n    background-color: var(--bg2);\n}'],sourceRoot:""}]),e.Z=A},645:function(n){n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var A={};if(r)for(var i=0;i<this.length;i++){var s=this[i][0];null!=s&&(A[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);r&&A[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),e.push(l))}},e}},537:function(n){n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:function(n){var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},A=[],i=0;i<n.length;i++){var s=n[i],c=r.base?s[0]+r.base:s[0],l=a[c]||0,u="".concat(c," ").concat(l);a[c]=l+1;var d=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(p);else{var g=o(p,r);r.byIndex=i,e.splice(i,0,{identifier:u,updater:g,references:1})}A.push(u)}return A}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var A=0;A<a.length;A++){var i=t(a[A]);e[i].references--}for(var s=r(n,o),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:function(n){var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:function(n){n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:function(n,e,t){n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:function(n){n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:function(n){n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},b={};function f(n){var e=b[n];if(void 0!==e)return e.exports;var t=b[n]={id:n,exports:{}};return g[n](t,t.exports,f),t.exports}f.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return f.d(e,{a:e}),e},f.d=function(n,e){for(var t in e)f.o(e,t)&&!f.o(n,t)&&Object.defineProperty(n,t,{enumerable:!0,get:e[t]})},f.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},f.nc=void 0,n=f(379),e=f.n(n),t=f(795),r=f.n(t),o=f(569),a=f.n(o),A=f(565),i=f.n(A),s=f(216),c=f.n(s),l=f(589),u=f.n(l),d=f(426),(p={}).styleTagTransform=u(),p.setAttributes=i(),p.insert=a().bind(null,"head"),p.domAPI=r(),p.insertStyleElement=c(),e()(d.Z,p),d.Z&&d.Z.locals&&d.Z.locals,document.querySelector(".tt").addEventListener("click",(function(){const n=document.documentElement,e=n.querySelector(".tt");"dark"===n.className?n.removeAttribute("class"):n.className="dark","☀️"==e.textContent?e.textContent="🌙":e.textContent="☀️"})),new Promise((async(n,e)=>{fetch("https://api.weatherapi.com/v1/current.json?key=296f7866e4874f4a967204528230209&q=serdivan").then((n=>n.json())).then((e=>n(e))).catch((n=>e(n)))})).then((n=>console.log(n)))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,